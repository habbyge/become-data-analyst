m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# barplot of wine numbers across sugar levels
ggplot(data=wineData, aes(x=wineData$sugar_level)) +
geom_bar() +
labs(title='Wines of different sugar levels', x='Sugar level', y='Number of wines')
# kernel density plot for residual sugar across quality levels
ggplot(data=wineData, aes(x=residual.sugar, color=quality_level)) +
geom_density() +
scale_color_brewer(type = 'qual',
guide = guide_legend(title = 'quality level', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
labs(title='Distribution of residual sugar under different quality levels', x='Residual sugar', y='Density')
# scatterplots of residual sugar and density, clusted by quality levels,
# colored and shaped by alcohol and bound sulfur dioxide respectively
wineData$bound.sulfur.level <- cut(wineData$bound.sulfur.dioxide, breaks=c(4, 100, 331))
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density, color=alcohol, shape=bound.sulfur.level)) +
geom_jitter(alpha=.5) + facet_wrap(~quality_level, nrow=3) +
labs(title='Scatterplot between residual sugar and density clustered by quality level',
x='Residual sugar', y='Density')
mtable
mtable
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(gridExtra)
library(car)
library(vcd)
library(RColorBrewer)
# Load the Data
wineData <- read.csv('wineQualityWhites.csv', na.strings = c('', 'NA'))
# dimensions of dataset
dim(wineData)
# structures of dataset
str(wineData)
# summary about the original data
summary(wineData)
# create a new variable called bound.sulfur.dioxide according to specifications in wineQualityInfo.txt
wineData$bound.sulfur.dioxide <- wineData$total.sulfur.dioxide - wineData$free.sulfur.dioxide
# create a new variable called sugar_level by cut of residual sugar, convert it into ordered factor
wineData$sugar_level <- cut(wineData$residual.sugar, breaks = c(-Inf, 4, 12, 45, Inf), labels = c('dry', 'medium dry', 'medium', 'sweet'))
wineData$sugar_level <- factor(wineData$sugar_level, ordered=TRUE, levels=c('dry', 'medium dry', 'medium', 'sweet'))
# create a new variable called quality_level by quality ranges, convert it into ordered factor
wineData$quality_level <- ifelse(wineData$quality < 6, 'low', ifelse(wineData$quality == 6, 'medium', 'high'))
wineData$quality_level <- factor(wineData$quality_level, ordered=TRUE, levels=c('low', 'medium', 'high'))
# select and rearrange variables
wineData <- select(wineData, quality, quality_level, fixed.acidity, volatile.acidity, citric.acid, residual.sugar, sugar_level, chlorides, free.sulfur.dioxide, bound.sulfur.dioxide, sulphates, density, pH, alcohol)
# structure of adjusted data
str(wineData)
# histogram of quality levels
ggplot(data=wineData, aes(x=quality_level)) + geom_bar()
# table to see the actual number
table(wineData$quality_level)
# histogram of fixed acidity
pOrigin <- ggplot(data=wineData, aes(x=fixed.acidity)) + geom_histogram()
pBinned <- ggplot(data=wineData, aes(x=fixed.acidity)) + geom_histogram(binwidth = 0.12)
grid.arrange(pOrigin, pBinned, ncol=1)
# summary about fixed acidity
summary(wineData$fixed.acidity)
# histogram of volatile acidity
ggplot(data=wineData, aes(x=volatile.acidity)) + geom_histogram(binwidth = 0.01)
# summary about volatile acidity
summary(wineData$volatile.acidity)
# histogram of citric acidity
ggplot(data=wineData, aes(x=citric.acid)) + geom_histogram(binwidth = 0.01)
# summary about citric acid
summary(wineData$citric.acid)
# histogram of residual sugar
pSugarHist <- ggplot(data=wineData, aes(x=residual.sugar)) + geom_histogram(binwidth = 0.1)
pSugarHistScaled <- ggplot(data=wineData, aes(x=residual.sugar)) + geom_histogram(binwidth = 0.01) + scale_x_log10()
grid.arrange(pSugarHist, pSugarHistScaled, ncol=1)
# boxplot of residual sugar
ggplot(data=wineData, aes(x='residual sugar', y=residual.sugar)) + geom_boxplot()
# summary about residual sugar
summary(wineData$residual.sugar)
# barplot about number of wines of different sugar level
ggplot(data=wineData, aes(x=wineData$sugar_level)) + geom_bar()
# table to see the actual number
table(wineData$sugar_level)
# histogram of chlorides
ggplot(data=wineData, aes(x=chlorides)) + geom_histogram(binwidth = 0.001)
# boxplot of chlorides
ggplot(data=wineData, aes(x='chlorides', y=chlorides)) + geom_boxplot()
# summary about chlorides
summary(wineData$chlorides)
# histogram of free sulfur dioxide
ggplot(data=wineData, aes(x=free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
# histogram of bound sulfur dioxide
ggplot(data=wineData, aes(x=bound.sulfur.dioxide)) + geom_histogram(binwidth = 1)
# histogram of sulphates
ggplot(data=wineData, aes(x=sulphates)) + geom_histogram(binwidth = 0.01)
# summary about sulphates, free and bound sulfur dioxide
summary(select(wineData, free.sulfur.dioxide, bound.sulfur.dioxide, sulphates))
# histogram of density
ggplot(data=wineData, aes(x=density)) + geom_histogram(binwidth = 0.0001)
# summary about density
summary(wineData$density)
# histogram of pH
ggplot(data=wineData, aes(x=pH)) + geom_histogram(binwidth = 0.01)
# summary about pH value
summary(wineData$pH)
# histograms of alcohol
ggplot(data=wineData, aes(x=alcohol)) + geom_histogram(binwidth = 0.1)
# histograms of alcohol
ggplot(data=wineData, aes(x=alcohol)) + geom_histogram(binwidth = 0.01)
# summary about alcohol
summary(wineData$alcohol)
# the correlation matrix about all the numeric variables
cor(select(wineData, -quality_level, -sugar_level))
# scatterplots matrix about all the variables
scatterplotMatrix(~ quality + fixed.acidity + residual.sugar + chlorides + free.sulfur.dioxide + bound.sulfur.dioxide + density + pH + alcohol, data = wineData, spread = FALSE, smoother.args=list(lty=2), main='Scatter plot matrix of wine')
# scatterplot of density and quality
ggplot(data=wineData, aes(x=density, y=quality)) + geom_point()
# scatterplot about density and quality, adding jitter and alpha and limit the x axis to make it better
ggplot(data=wineData, aes(x=density, y=quality)) +
geom_jitter(alpha=0.02) +
scale_x_continuous(limits = c(0.95, 1.05)) +
geom_smooth(color='red', se=FALSE, method='lm')
# boxplots about density across quality levels
ggplot(data=wineData, aes(x=quality_level, y=density)) + geom_boxplot() + xlab('quality levels')
# summary density across quality levels
by(wineData$density, wineData$quality_level, summary)
# scatterplot about alcohol and quality
ggplot(data=wineData, aes(x=alcohol, y=quality)) + geom_point()
# add jitter and alpha to make it better
ggplot(data=wineData, aes(x=alcohol, y=quality)) +
geom_jitter(alpha=0.05) +
geom_smooth(se=FALSE, method='lm', color='red')
# scatterplot of alcohol and density, jitter and alpha added
ggplot(data=wineData, aes(x=alcohol, y=density)) +
geom_jitter(alpha=0.05) +
geom_smooth(se=FALSE, method='lm', color='red')
# boxplots about alcohol across quality levels
ggplot(data=wineData, aes(x=quality_level, y=alcohol)) + geom_boxplot() + xlab('quality levels')
# summary of alcohol across quality levels
by(wineData$alcohol, wineData$quality_level, summary)
# scatterplot of fixed acidity and pH
ggplot(data=wineData, aes(x=fixed.acidity, y=pH)) + geom_point()
# add jitter and alpha to make it better
ggplot(data=wineData, aes(x=fixed.acidity, y=pH)) + geom_jitter(alpha=0.05) + geom_smooth(method='lm', color='red', se=FALSE)
# boxplots about fixed acidity across quality levels
ggplot(data=wineData, aes(x=quality_level, y=fixed.acidity)) + geom_boxplot() + xlab('quality levels')
# summary of fixed acidity across quality levels
by(wineData$fixed.acidity, wineData$quality_level, summary)
# boxplots about volatile acidity across quality levels
ggplot(data=wineData, aes(x=quality_level, y=volatile.acidity)) + geom_boxplot() + xlab('quality levels')
# summary about volatile acidity across quality levels
by(wineData$volatile.acidity, wineData$quality_level, summary)
# boxplots about citric acid across quality levels
ggplot(data=wineData, aes(x=quality_level, y=citric.acid)) + geom_boxplot() + xlab('quality levels')
# summary about citric acid across quality levels
by(wineData$citric.acid, wineData$quality_level, summary)
# boxplots about pH across quality levels
ggplot(data=wineData, aes(x=quality_level, y=pH)) + geom_boxplot() + xlab('quality levels')
# summary of pH across quality levels
by(wineData$pH, wineData$quality_level, summary)
# boxplots about free sulfur dioxide across quality levels
ggplot(data=wineData, aes(x=quality_level, y=free.sulfur.dioxide)) + geom_boxplot() + xlab('quality levels')
# summary of free sulful dioxide across quality levels
by(wineData$free.sulfur.dioxide, wineData$quality_level, summary)
# boxplots about bound sulfur dioxide across quality levels
ggplot(data=wineData, aes(x=quality_level, y=bound.sulfur.dioxide)) + geom_boxplot() + xlab('quality levels')
# summary about bound sulfur dioxide across quality levels
by(wineData$bound.sulfur.dioxide, wineData$quality_level, summary)
# boxplots about sulphates across quality levels
ggplot(data=wineData, aes(x=quality_level, y=sulphates)) + geom_boxplot() + xlab('quality levels')
# summary of sulphates across quality levels
by(wineData$sulphates, wineData$quality_level, summary)
# scatterplot of residual sugar and density
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, probs = .99)), aes(x=residual.sugar, y=density)) + geom_jitter(alpha=0.05) + geom_smooth(method='lm', color='red')
# boxplots about residual sugar across quality levels
ggplot(data=wineData, aes(x=quality_level, y=residual.sugar)) + geom_boxplot() + xlab('quality levels')
# summary about residual sugar across quality levels
by(wineData$residual.sugar, wineData$quality_level, summary)
# mosaic plot for sugar levels and quality levels
mosaic(~sugar_level + quality_level, data=wineData, shade=TRUE, legend=TRUE)
# boxplots about chlorides across quality levels
ggplot(data=wineData, aes(x=quality_level, y=chlorides)) + geom_boxplot() + xlab('quality levels')
# summary of chlorides across quality levels
by(wineData$chlorides, wineData$quality_level, summary)
# kernel density plot of residual sugar across quality levels
ggplot(data=wineData, aes(x=residual.sugar, color=quality_level)) + geom_density()
# scatterplots about residual sugar and citric acide across quality levels
ggplot(data=wineData, aes(x=residual.sugar, y=citric.acid)) + geom_jitter(alpha=0.05) + facet_wrap(~quality_level, nrow=3)
# scatterplots of residual sugar and density across quality levels
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density)) +
geom_point() +
geom_smooth(se=FALSE, method='lm', color='red') +
facet_wrap(~quality_level)
# summary about linear model in general
summary(lm(formula=density~residual.sugar, data=wineData))
# summary about linear model for low quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'low')))
# summary about linear model for medium quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'medium')))
# summary about linear model for high quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'high')))
# scatterplots of alcohol and density across quality levels
ggplot(data=subset(wineData, alcohol <= quantile(wineData$alcohol, prob=.99)),
aes(x=alcohol, y=density)) +
geom_point() +
geom_smooth(se=FALSE, method='lm', color='red') +
facet_wrap(~quality_level)
# summary about linear model in general
summary(lm(formula=density ~ alcohol, data=wineData))
# summary about linear model for low quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'low')))
# summary about linear model for medium quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'medium')))
# summary about linear model for high quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'high')))
# scatterplots of residual sugar and density, clusted by quality levels,
# colored and shaped by alcohol and bound sulfur dioxide respectively
wineData$bound.sulfur.level <- cut(wineData$bound.sulfur.dioxide, breaks=c(4, 100, 331))
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density, color=alcohol, shape=bound.sulfur.level)) +
geom_point() + facet_wrap(~quality_level, nrow=3)
# summary about linear model in general
m1 <- lm(formula=density ~ residual.sugar, data=wineData)
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for low quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'low'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for medium quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'medium'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for high quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'high'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# barplot of wine numbers across sugar levels
ggplot(data=wineData, aes(x=wineData$sugar_level)) +
geom_bar() +
labs(title='Wines of different sugar levels', x='Sugar level', y='Number of wines')
# kernel density plot for residual sugar across quality levels
ggplot(data=wineData, aes(x=residual.sugar, color=quality_level)) +
geom_density() +
scale_color_brewer(type = 'qual',
guide = guide_legend(title = 'quality level', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
labs(title='Distribution of residual sugar under different quality levels', x='Residual sugar', y='Density')
# scatterplots of residual sugar and density, clusted by quality levels,
# colored and shaped by alcohol and bound sulfur dioxide respectively
wineData$bound.sulfur.level <- cut(wineData$bound.sulfur.dioxide, breaks=c(4, 100, 331))
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density, color=alcohol, shape=bound.sulfur.level)) +
geom_jitter(alpha=.5) + facet_wrap(~quality_level, nrow=3) +
labs(title='Scatterplot between residual sugar and density clustered by quality level',
x='Residual sugar', y='Density')
mtable(m1, m2, m3)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(gridExtra)
library(car)
library(vcd)
library(RColorBrewer)
# Load the Data
wineData <- read.csv('wineQualityWhites.csv', na.strings = c('', 'NA'))
# dimensions of dataset
dim(wineData)
# structures of dataset
str(wineData)
# summary about the original data
summary(wineData)
# create a new variable called bound.sulfur.dioxide according to specifications in wineQualityInfo.txt
wineData$bound.sulfur.dioxide <- wineData$total.sulfur.dioxide - wineData$free.sulfur.dioxide
# create a new variable called sugar_level by cut of residual sugar, convert it into ordered factor
wineData$sugar_level <- cut(wineData$residual.sugar, breaks = c(-Inf, 4, 12, 45, Inf), labels = c('dry', 'medium dry', 'medium', 'sweet'))
wineData$sugar_level <- factor(wineData$sugar_level, ordered=TRUE, levels=c('dry', 'medium dry', 'medium', 'sweet'))
# create a new variable called quality_level by quality ranges, convert it into ordered factor
wineData$quality_level <- ifelse(wineData$quality < 6, 'low', ifelse(wineData$quality == 6, 'medium', 'high'))
wineData$quality_level <- factor(wineData$quality_level, ordered=TRUE, levels=c('low', 'medium', 'high'))
# select and rearrange variables
wineData <- select(wineData, quality, quality_level, fixed.acidity, volatile.acidity, citric.acid, residual.sugar, sugar_level, chlorides, free.sulfur.dioxide, bound.sulfur.dioxide, sulphates, density, pH, alcohol)
# structure of adjusted data
str(wineData)
# histogram of quality levels
ggplot(data=wineData, aes(x=quality_level)) + geom_bar()
# table to see the actual number
table(wineData$quality_level)
# histogram of fixed acidity
pOrigin <- ggplot(data=wineData, aes(x=fixed.acidity)) + geom_histogram()
pBinned <- ggplot(data=wineData, aes(x=fixed.acidity)) + geom_histogram(binwidth = 0.12)
grid.arrange(pOrigin, pBinned, ncol=1)
# summary about fixed acidity
summary(wineData$fixed.acidity)
# histogram of volatile acidity
ggplot(data=wineData, aes(x=volatile.acidity)) + geom_histogram(binwidth = 0.01)
# summary about volatile acidity
summary(wineData$volatile.acidity)
# histogram of citric acidity
ggplot(data=wineData, aes(x=citric.acid)) + geom_histogram(binwidth = 0.01)
# summary about citric acid
summary(wineData$citric.acid)
# histogram of residual sugar
pSugarHist <- ggplot(data=wineData, aes(x=residual.sugar)) + geom_histogram(binwidth = 0.1)
pSugarHistScaled <- ggplot(data=wineData, aes(x=residual.sugar)) + geom_histogram(binwidth = 0.01) + scale_x_log10()
grid.arrange(pSugarHist, pSugarHistScaled, ncol=1)
# boxplot of residual sugar
ggplot(data=wineData, aes(x='residual sugar', y=residual.sugar)) + geom_boxplot()
# summary about residual sugar
summary(wineData$residual.sugar)
# barplot about number of wines of different sugar level
ggplot(data=wineData, aes(x=wineData$sugar_level)) + geom_bar()
# table to see the actual number
table(wineData$sugar_level)
# histogram of chlorides
ggplot(data=wineData, aes(x=chlorides)) + geom_histogram(binwidth = 0.001)
# boxplot of chlorides
ggplot(data=wineData, aes(x='chlorides', y=chlorides)) + geom_boxplot()
# summary about chlorides
summary(wineData$chlorides)
# histogram of free sulfur dioxide
ggplot(data=wineData, aes(x=free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
# histogram of bound sulfur dioxide
ggplot(data=wineData, aes(x=bound.sulfur.dioxide)) + geom_histogram(binwidth = 1)
# histogram of sulphates
ggplot(data=wineData, aes(x=sulphates)) + geom_histogram(binwidth = 0.01)
# summary about sulphates, free and bound sulfur dioxide
summary(select(wineData, free.sulfur.dioxide, bound.sulfur.dioxide, sulphates))
# histogram of density
ggplot(data=wineData, aes(x=density)) + geom_histogram(binwidth = 0.0001)
# summary about density
summary(wineData$density)
# histogram of pH
ggplot(data=wineData, aes(x=pH)) + geom_histogram(binwidth = 0.01)
# summary about pH value
summary(wineData$pH)
# histograms of alcohol
ggplot(data=wineData, aes(x=alcohol)) + geom_histogram(binwidth = 0.1)
# histograms of alcohol
ggplot(data=wineData, aes(x=alcohol)) + geom_histogram(binwidth = 0.01)
# summary about alcohol
summary(wineData$alcohol)
# the correlation matrix about all the numeric variables
cor(select(wineData, -quality_level, -sugar_level))
# scatterplots matrix about all the variables
scatterplotMatrix(~ quality + fixed.acidity + residual.sugar + chlorides + free.sulfur.dioxide + bound.sulfur.dioxide + density + pH + alcohol, data = wineData, spread = FALSE, smoother.args=list(lty=2), main='Scatter plot matrix of wine')
# scatterplot of density and quality
ggplot(data=wineData, aes(x=density, y=quality)) + geom_point()
# scatterplot about density and quality, adding jitter and alpha and limit the x axis to make it better
ggplot(data=wineData, aes(x=density, y=quality)) +
geom_jitter(alpha=0.02) +
scale_x_continuous(limits = c(0.95, 1.05)) +
geom_smooth(color='red', se=FALSE, method='lm')
# boxplots about density across quality levels
ggplot(data=wineData, aes(x=quality_level, y=density)) + geom_boxplot() + xlab('quality levels')
# summary density across quality levels
by(wineData$density, wineData$quality_level, summary)
# scatterplot about alcohol and quality
ggplot(data=wineData, aes(x=alcohol, y=quality)) + geom_point()
# add jitter and alpha to make it better
ggplot(data=wineData, aes(x=alcohol, y=quality)) +
geom_jitter(alpha=0.05) +
geom_smooth(se=FALSE, method='lm', color='red')
# scatterplot of alcohol and density, jitter and alpha added
ggplot(data=wineData, aes(x=alcohol, y=density)) +
geom_jitter(alpha=0.05) +
geom_smooth(se=FALSE, method='lm', color='red')
# boxplots about alcohol across quality levels
ggplot(data=wineData, aes(x=quality_level, y=alcohol)) + geom_boxplot() + xlab('quality levels')
# summary of alcohol across quality levels
by(wineData$alcohol, wineData$quality_level, summary)
# scatterplot of fixed acidity and pH
ggplot(data=wineData, aes(x=fixed.acidity, y=pH)) + geom_point()
# add jitter and alpha to make it better
ggplot(data=wineData, aes(x=fixed.acidity, y=pH)) + geom_jitter(alpha=0.05) + geom_smooth(method='lm', color='red', se=FALSE)
# boxplots about fixed acidity across quality levels
ggplot(data=wineData, aes(x=quality_level, y=fixed.acidity)) + geom_boxplot() + xlab('quality levels')
# summary of fixed acidity across quality levels
by(wineData$fixed.acidity, wineData$quality_level, summary)
# boxplots about volatile acidity across quality levels
ggplot(data=wineData, aes(x=quality_level, y=volatile.acidity)) + geom_boxplot() + xlab('quality levels')
# summary about volatile acidity across quality levels
by(wineData$volatile.acidity, wineData$quality_level, summary)
# boxplots about citric acid across quality levels
ggplot(data=wineData, aes(x=quality_level, y=citric.acid)) + geom_boxplot() + xlab('quality levels')
# summary about citric acid across quality levels
by(wineData$citric.acid, wineData$quality_level, summary)
# boxplots about pH across quality levels
ggplot(data=wineData, aes(x=quality_level, y=pH)) + geom_boxplot() + xlab('quality levels')
# summary of pH across quality levels
by(wineData$pH, wineData$quality_level, summary)
# boxplots about free sulfur dioxide across quality levels
ggplot(data=wineData, aes(x=quality_level, y=free.sulfur.dioxide)) + geom_boxplot() + xlab('quality levels')
# summary of free sulful dioxide across quality levels
by(wineData$free.sulfur.dioxide, wineData$quality_level, summary)
# boxplots about bound sulfur dioxide across quality levels
ggplot(data=wineData, aes(x=quality_level, y=bound.sulfur.dioxide)) + geom_boxplot() + xlab('quality levels')
# summary about bound sulfur dioxide across quality levels
by(wineData$bound.sulfur.dioxide, wineData$quality_level, summary)
# boxplots about sulphates across quality levels
ggplot(data=wineData, aes(x=quality_level, y=sulphates)) + geom_boxplot() + xlab('quality levels')
# summary of sulphates across quality levels
by(wineData$sulphates, wineData$quality_level, summary)
# scatterplot of residual sugar and density
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, probs = .99)), aes(x=residual.sugar, y=density)) + geom_jitter(alpha=0.05) + geom_smooth(method='lm', color='red')
# boxplots about residual sugar across quality levels
ggplot(data=wineData, aes(x=quality_level, y=residual.sugar)) + geom_boxplot() + xlab('quality levels')
# summary about residual sugar across quality levels
by(wineData$residual.sugar, wineData$quality_level, summary)
# mosaic plot for sugar levels and quality levels
mosaic(~sugar_level + quality_level, data=wineData, shade=TRUE, legend=TRUE)
# boxplots about chlorides across quality levels
ggplot(data=wineData, aes(x=quality_level, y=chlorides)) + geom_boxplot() + xlab('quality levels')
# summary of chlorides across quality levels
by(wineData$chlorides, wineData$quality_level, summary)
# kernel density plot of residual sugar across quality levels
ggplot(data=wineData, aes(x=residual.sugar, color=quality_level)) + geom_density()
# scatterplots about residual sugar and citric acide across quality levels
ggplot(data=wineData, aes(x=residual.sugar, y=citric.acid)) + geom_jitter(alpha=0.05) + facet_wrap(~quality_level, nrow=3)
# scatterplots of residual sugar and density across quality levels
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density)) +
geom_point() +
geom_smooth(se=FALSE, method='lm', color='red') +
facet_wrap(~quality_level)
# summary about linear model in general
summary(lm(formula=density~residual.sugar, data=wineData))
# summary about linear model for low quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'low')))
# summary about linear model for medium quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'medium')))
# summary about linear model for high quality
summary(lm(formula=density~residual.sugar, data=subset(wineData, quality_level == 'high')))
# scatterplots of alcohol and density across quality levels
ggplot(data=subset(wineData, alcohol <= quantile(wineData$alcohol, prob=.99)),
aes(x=alcohol, y=density)) +
geom_point() +
geom_smooth(se=FALSE, method='lm', color='red') +
facet_wrap(~quality_level)
# summary about linear model in general
summary(lm(formula=density ~ alcohol, data=wineData))
# summary about linear model for low quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'low')))
# summary about linear model for medium quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'medium')))
# summary about linear model for high quality
summary(lm(formula=density ~ alcohol, data=subset(wineData, quality_level == 'high')))
# scatterplots of residual sugar and density, clusted by quality levels,
# colored and shaped by alcohol and bound sulfur dioxide respectively
wineData$bound.sulfur.level <- cut(wineData$bound.sulfur.dioxide, breaks=c(4, 100, 331))
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density, color=alcohol, shape=bound.sulfur.level)) +
geom_point() + facet_wrap(~quality_level, nrow=3)
# summary about linear model in general
m1 <- lm(formula=density ~ residual.sugar, data=wineData)
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for low quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'low'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for medium quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'medium'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# summary about linear model for high quality
m1 <- lm(formula=density ~ residual.sugar, data=subset(wineData, quality_level == 'high'))
m2 <- update(m1, ~ . + bound.sulfur.dioxide)
m3 <- update(m2, ~ . + alcohol)
summary(m3)
# barplot of wine numbers across sugar levels
ggplot(data=wineData, aes(x=wineData$sugar_level)) +
geom_bar() +
labs(title='Wines of different sugar levels', x='Sugar level', y='Number of wines')
# kernel density plot for residual sugar across quality levels
ggplot(data=wineData, aes(x=residual.sugar, color=quality_level)) +
geom_density() +
scale_color_brewer(type = 'qual',
guide = guide_legend(title = 'quality level', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
labs(title='Distribution of residual sugar under different quality levels', x='Residual sugar', y='Density')
# scatterplots of residual sugar and density, clusted by quality levels,
# colored and shaped by alcohol and bound sulfur dioxide respectively
wineData$bound.sulfur.level <- cut(wineData$bound.sulfur.dioxide, breaks=c(4, 100, 331))
ggplot(data=subset(wineData, residual.sugar <= quantile(wineData$residual.sugar, prob=.99)),
aes(x=residual.sugar, y=density, color=alcohol, shape=bound.sulfur.level)) +
geom_jitter(alpha=.5) + facet_wrap(~quality_level, nrow=3) +
labs(title='Scatterplot between residual sugar and density clustered by quality level',
x='Residual sugar', y='Density')
setwd('/home/leesper/become-data-analyst/P6_Effective_Data_Visualization/data')
library(dplyr)
originalData <- read.csv('prosperLoanData.csv', na.strings = c('', 'NA'))
subData <- select(originalData,
LoanOriginationDate,
LoanStatus,
BorrowerState,
Occupation)
write.table(subData, sep=',', file='prosperSubData.csv', col.names = TRUE, row.names = FALSE)
